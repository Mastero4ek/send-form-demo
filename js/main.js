(()=>{"use strict";var __webpack_modules__={804:()=>{eval("\n;// CONCATENATED MODULE: ./modules/helpers.js\nfunction validateEmail(email) {\r\n    var emailStr = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return emailStr.test(email);\r\n}\n;// CONCATENATED MODULE: ./modules/validation.js\n\r\n\r\nconst validation = () => {\r\n    const userName = form.querySelector('[name=\"fio\"]'),\r\n        userEmail = form.querySelector('[name=\"email\"]'),\r\n        userPhone = form.querySelector('[name=\"phone\"]');\r\n\r\n    let success = true\r\n\r\n    if (userName.value.length < 2) {\r\n        userName.style.borderBottom = '2px red solid'\r\n        userName.style.color = 'red'\r\n        success = false\r\n    }\r\n\r\n    if (!validateEmail(userEmail.value)) {\r\n        userEmail.style.borderBottom = '2px red solid'\r\n        userEmail.style.color = 'red'\r\n        success = false\r\n    }\r\n\r\n    if (userPhone.value.length < 11) {\r\n        userPhone.style.borderBottom = '2px red solid'\r\n        userPhone.style.color = 'red'\r\n        success = false\r\n    }\r\n\r\n    return success\r\n}\n;// CONCATENATED MODULE: ./modules/sendForm.js\n\r\n\r\nconst sendForm = (formWrapper) => {\r\n    const formWrapperId = document.getElementById(formWrapper)\r\n\r\n    if (!formWrapperId) return\r\n\r\n    const form = formWrapperId.querySelector('[name=\"form\"]'),\r\n        formBtn = formWrapperId.querySelector('.form-btn');\r\n\r\n    form.reset()\r\n\r\n    const sendData = (data) => {\r\n        return fetch('https://jsonplaceholder.typicode.com/posts', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n    }\r\n\r\n    const submitForm = () => {\r\n        const formData = new FormData(form),\r\n            formBody = {}\r\n\r\n        formBtn.textContent = 'Отправляем...'\r\n        formBtn.disabled = true\r\n\r\n        formData.forEach((val, key) => {\r\n            if (val != '') formBody[key] = val\r\n        })\r\n\r\n        if (validation()) {\r\n            sendData(formBody)\r\n                .then(data => {\r\n                    formBtn.disabled = false\r\n                    formBtn.textContent = 'Отправить'\r\n                    form.reset()\r\n\r\n                    console.log(formBody)\r\n                })\r\n                .catch(error => {\r\n                    formBtn.textContent = 'Ошибка запроса!'\r\n                    setTimeout(() => {\r\n                        formBtn.textContent = 'Отправить'\r\n                        formBtn.disabled = false\r\n                    }, 3000)\r\n                })\r\n        } else {\r\n            formBtn.textContent = 'Ошибка в данных!'\r\n            setTimeout(() => {\r\n                formBtn.textContent = 'Отправить'\r\n                formBtn.disabled = false\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    form.addEventListener('submit', (e) => {\r\n        e.preventDefault()\r\n\r\n        submitForm()\r\n    })\r\n}\n;// CONCATENATED MODULE: ./modules/labelsWave.js\nconst labelWaves = () => {\r\n    const labels = document.querySelectorAll('.form-label')\r\n\r\n    labels.forEach(label => {\r\n        label.innerHTML = label.innerText\r\n            .split('')\r\n            .map((letter, index) => `<span style=\"transition-delay:${index * 50}ms\">${letter}</span>`)\r\n            .join('')\r\n    })\r\n}\n;// CONCATENATED MODULE: ./modules/modalForm.js\nconst modalForm = () => {\r\n    const serviceWrapper = document.querySelector('.service-list'),\r\n        serviceBtns = serviceWrapper.querySelectorAll('.service-btn'),\r\n        decorate = document.querySelector('.decorate'),\r\n        modal = document.getElementById('modal');\r\n\r\n    serviceWrapper.addEventListener('click', (e) => {\r\n        const target = e.target.closest('.service-btn')\r\n\r\n        if (target) {\r\n            serviceBtns.forEach((btn) => {\r\n                if (btn === target && !target.classList.contains('btn-active')) {\r\n                    btn.classList.add('btn-active')\r\n                } else {\r\n                    btn.classList.remove('btn-active')\r\n                }\r\n            })\r\n        }\r\n\r\n        modal.classList.add('show')\r\n        decorate.classList.add('decorate-inactive')\r\n    })\r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target.matches('.container-btn') || e.target.matches('.container-btn>span')) {\r\n            serviceBtns.forEach((btn) => {\r\n                btn.classList.remove('btn-active')\r\n            })\r\n\r\n            modal.classList.remove('show')\r\n            decorate.classList.remove('decorate-inactive')\r\n        }\r\n    })\r\n}\n;// CONCATENATED MODULE: ./modules/getTypeCoffee.js\nconst getTypeCoffee = () => {\r\n    const serviceBtn = document.querySelectorAll('.service-btn'),\r\n        inputForm = document.querySelector('[name=\"typeCoffee\"]');\r\n\r\n    serviceBtn.forEach(btn => {\r\n        btn.addEventListener('click', (e) => {\r\n            inputForm.value = e.target.textContent\r\n        })\r\n    })\r\n}\n;// CONCATENATED MODULE: ./modules/validationInputs.js\nconst validationInputs = () => {\r\n    const allInputs = document.querySelectorAll('input')\r\n\r\n    const isName = /[^а-яёA-ЯЁ\\aA-zZ\\s\\-]/g,\r\n        isEmail = /[^a-zA-Z0-9\\'\\*\\~\\!\\.\\_\\-\\@]/g,\r\n        isPhone = /[^0-9\\+]/g,\r\n        cutSpaceHyphen = /^[\\s\\-]+$/g,\r\n        trimSpace = /\\s{2,}/g,\r\n        trimHyphen = /\\-{2,}/g;\r\n\r\n    const trimSimbol = (e) => {\r\n        e.target.value = e.target.value.replace(trimSpace, \" \")\r\n        e.target.value = e.target.value.replace(cutSpaceHyphen, \"\")\r\n        e.target.value = e.target.value.replace(trimHyphen, \"-\")\r\n    };\r\n\r\n    const trimPhone = (e) => {\r\n        if (e.target.value.length > 16) e.target.value = e.target.value.slice(0, 16)\r\n    }\r\n\r\n    const capitalize = (e) => {\r\n        e.target.value = e.target.value.replace(/(^|\\s)\\S/g, function (str) {\r\n            return str.toUpperCase()\r\n        });\r\n    };\r\n\r\n    const validationInput = (item, e) => {\r\n        trimSimbol(e)\r\n\r\n        switch (true) {\r\n            case item.name == 'fio':\r\n                e.target.style.borderBottom = ''\r\n                e.target.style.color = ''\r\n                e.target.value = e.target.value.replace(isName, \"\")\r\n                capitalize(e)\r\n                break\r\n\r\n            case item.name == 'email':\r\n                e.target.style.borderBottom = ''\r\n                e.target.style.color = ''\r\n                e.target.value = e.target.value.replace(isEmail, \"\")\r\n                break\r\n\r\n            case item.name == 'phone':\r\n                trimPhone(e)\r\n\r\n                e.target.style.borderBottom = ''\r\n                e.target.style.color = ''\r\n                e.target.value = e.target.value.replace(isPhone, \"\")\r\n                break\r\n        }\r\n    };\r\n\r\n    allInputs.forEach(input => input.addEventListener('input', event => validationInput(input, event)))\r\n}\n;// CONCATENATED MODULE: ./index.js\n\r\n\r\n\r\n\r\n\r\n\r\nsendForm()\r\nlabelWaves()\r\nmodalForm()\r\nsendForm('modal')\r\ngetTypeCoffee()\r\nvalidationInputs()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///804\n")}},__webpack_exports__={};__webpack_modules__[804]()})();